---

---

<!-- TODO: AJOUTER UN SCROLL DOWN A LA FIN DE L'ANIMATION -->
<section class="hero flex h-screen flex-col justify-between overflow-hidden bg-firefly-900 lg:flex-row lg:flex-nowrap">
	<div class="hero-border pointer-events-none h-[15%] w-1/4 border-b-2 border-fantasy-50 lg:h-0 lg:w-1/12 lg:border-b-0 lg:border-r-2">
	</div>
	<div class="relative flex h-[70%] w-full items-center justify-center lg:h-full lg:w-10/12">
		<div class="hero-text">
			<div class="split-text pointer-events-none flex flex-row flex-nowrap text-fantasy-50">
				<span class="char">M</span>
				<span class="char">é</span>
				<span class="char">l</span>
				<span class="char">a</span>
				<span class="char">n</span>
				<span class="char">i</span>
				<span class="char">e</span>
				<span class="char inline-block w-14"></span>
				<span class="char">C</span>
				<span class="char">a</span>
				<span class="char">s</span>
				<span class="char">u</span>
			</div>
			<div class="overflow-hidden text-center">
				<span
					class="subtitle inline-block translate-y-full font-primary text-2xl text-fantasy-50 md:text-4xl xl:text-5xl 2xl:text-6xl"
				>
					portfolio
				</span>
			</div>
		</div>
	</div>
	<div
		class="hero-border pointer-events-none h-[15%] w-1/4 self-end border-t-2 border-fantasy-50 lg:h-0 lg:w-1/12 lg:border-l-2 lg:border-t-0"
	>
	</div>
</section>

<style is:global lang="postcss">
.split-text span {
	@apply inline-block font-primary opacity-75 text-7xl text-[150px] md:text-[250px] lg:text-[300px] xl:text-[350px] 2xl:text-[400px];
	transform-origin: 50% 50%;
}
</style>

<script>
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/src/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const splitText = document.querySelectorAll<HTMLElement>(".split-text .char");

	/* FONCTION DE PLACEMENT ALÉATOIRE DES LETTRES */
	function positionCharsRandomly() {
		// const isMobileVersion = window.innerWidth <= 1023;

		splitText.forEach((char) => {
			// Générer des positions / rotations aléatoires
			const randomY = Math.random() * 600 - 300; // entre -300px et 300px
			const randomZ = Math.random() * 50 - 50 / 2; // Décalage en profondeur
			const randomRotationY = Math.random() * 1000 - 500; // entre -500° et 500°

			// Appliquer les transformations initiales via GSAP
			gsap.set(char, {
				y: randomY,
				z: randomZ,
				rotationY: randomRotationY
			});
		});
	}
	// Appeler la fonction après le chargement de la page
	window.addEventListener("load", positionCharsRandomly);

	// MOBILE ANIMATION
	let mmMobile = gsap.matchMedia();
	mmMobile.add("(max-width: 1023px)", () => {
		let tl = gsap.timeline({});
		tl.to(".hero-border", { width: "100%", duration: 1, delay: 4 }, "<");
		tl.to(
			splitText,
			{
				y: 0,
				z: 0,
				fontSize: "20vw",
				rotationY: 0,
				duration: 2,
				stagger: {
					from: "random",
					ease: "power2.in"
				}
			},
			"<"
		);
		tl.to(".hero-text .subtitle", { translateY: "0", duration: "0.8" });
		tl.to(".split-text", { opacity: 0.2, duration: "1" }, "<");
		tl.to("body", { overflow: "visible" });
	});

	// DESKTOP ANIMATION
	let mmDesktop = gsap.matchMedia();
	mmDesktop.add("(min-width: 1024px)", () => {
		let tl = gsap.timeline({});
		tl.to(".hero-border", { height: "100%", duration: 1, delay: 4 });
		tl.to(
			splitText,
			{
				y: 0,
				z: 0,
				fontSize: "15vw",
				rotationY: 0,
				duration: 2,
				stagger: {
					from: "random",
					ease: "power2.in"
				}
			},
			"<"
		);
		tl.to(".hero-text .subtitle", { translateY: "0", duration: "0.8" });
		tl.to(".split-text", { opacity: 0.2, duration: "1" }, "<");
		tl.to("body", { overflow: "visible" });
	});
</script>
