---
import "/src/assets/fonts/stylesheet.css";
import Menu from "../components/common/Menu.astro";
interface Props {
	title: string;
	menuText: string;
}

const { title, menuText } = Astro.props;
---

<!doctype html>
<html lang="fr">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="relative bg-firefly-900">
		<div id="transition-wrapper" class="fixed left-0 top-0 z-[99] h-screen w-full -translate-y-full bg-firefly-900"></div>
		<Menu />
		<slot />
	</body>
</html>
<style is:global lang="postcss" define:vars={{ menuText: menuText }}>
body * {
  @apply font-content font-light lg:text-xl tracking-[1px];
  line-height: normal !important;
  word-spacing: 1px;
}

.title {
  @apply font-primary;
  white-space: nowrap;
}

@media screen and (max-width: 1023px) {
  .title {
    writing-mode: vertical-lr;
    text-orientation: mixed;
    @apply rotate-180 translate-y-1/3 text-6xl sm:text-7xl md:text-8xl pr-4 sm:pr-10 md:pb-4;
  }
}

@media screen and (min-width: 1024px) {
  .title {
    @apply lg:text-8xl xl:text-9xl 2xl:text-[150px];
  }
}
</style>
<script>
	import gsap from "gsap";
	// TRANSITION DE PAGE
	let tlEnter = gsap.timeline({});
	let tlExit = gsap.timeline({});

	// Fonction pour naviguer vers une nouvelle URL
	const navigateTo = (url) => {
		window.location.href = url;
	};

	// Animation de sortie
	const pageExit = async () => {
		return tlExit
			.to("#transition-wrapper", {
				translateY: 0,
				duration: 1.5,
				ease: "power3.inOut"
			})
			.to("body", { overflow: "hidden" }, "<");
	};

	// Animation d'entrée
	const pageEnter = async () => {
		return (
			tlEnter
				.to("body", { overflow: "hidden" })
				// Rajouter animation du logo
				.fromTo("#transition-wrapper", { translateY: "0" }, { translateY: "-100%", duration: 1.5, ease: "power3.out" }, "<")
				.to("main", { opacity: 1 }, "<")
				.to("body", { overflow: "visible" })
		);
	};

	// Gestion du clic sur les liens et des animations
	const setupTransitions = () => {
		const links = document.querySelectorAll("a");

		// Pour tous les liens :
		links.forEach((link) => {
			link.addEventListener("click", async (event) => {
				event.preventDefault(); // Empêcher le comportement par défaut au clic

				const href = link.getAttribute("href"); // Récupération de l'URL pour rediriger

				// Lancement de l'animation de sortie
				await pageExit();

				// Changement de page
				navigateTo(href);
			});
		});

		// Lancement de l'animation d'entrée
		pageEnter();
	};

	// Initialiser la fonction
	setupTransitions();
</script>
